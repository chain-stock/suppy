name: Test

on:
  pull_request:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '*'

jobs:
  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        py:
          - "3.9"
          - "3.10"
        include:
          # Only collect reports for sonar scan on a single leg of the matrix
          - os: ubuntu-latest
            py: "3.9"
            sonar: true

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.py }}
      uses: actions/setup-python@v4
      id: python
      with:
        python-version: ${{ matrix.py }}

    - name: Install dependencies
      run: |
        pip install -U pip
        pip install tox-gh

    - name: Cache Tox
      uses: actions/cache@v3.0.5
      with:
        path: .tox
        key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('poetry.lock') }}
        restore-keys: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('tox.ini') }}-

    - name: Test with tox
      run: python -m tox

    - name: Correct coverage report for SonarCloud scan
      run: sed -i 's?/home/runner/work/suppy/suppy?\.?g' tests/results/coverage.xml
      if: matrix.sonar

    - name: Upload python test results
      uses: actions/upload-artifact@v3
      if: matrix.sonar
      with:
        name: python-junit
        path: tests/results/junit.xml

    - name: Upload python coverage report
      uses: actions/upload-artifact@v3
      if: matrix.sonar
      with:
        name: python-coverage
        path: tests/results/coverage.xml

    - name: Upload pylint report
      uses: actions/upload-artifact@v3
      if: matrix.sonar
      with:
        name: pylint
        path: pylint-report.txt

  sonar:
    name: Run SonarCloud Scan
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 5
    if: always()

    steps:
    - uses: actions/checkout@v3
    - run: |
        git fetch --prune --unshallow

    - name: Download junit report
      uses: actions/download-artifact@v3
      with:
        name: python-junit
        path: tests/results

    - name: Download python coverage report
      uses: actions/download-artifact@v3
      with:
        name: python-coverage
        path: tests/results

    - name: Download pylint report
      uses: actions/download-artifact@v3
      with:
        name: pylint
        path: .

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v1.6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      if: always()
